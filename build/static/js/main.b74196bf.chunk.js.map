{"version":3,"sources":["constants/colors.js","components/AppHeader/AppHeader.js","screens/Blogs/BlogCard.js","screens/Blogs/Blogs.js","screens/About/About.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","title","marginLeft","fontFamily","avatar","height","spacing","width","marginRight","AppHeader","classes","className","root","AppBar","position","id","style","backgroundColor","colors","minHeight","justifyContent","alignItems","Toolbar","disableGutters","flexGrow","display","Avatar","alt","src","Typography","variant","maxWidth","media","padding","RecipeReviewCard","thumbnail","content","link","Card","CardActionArea","onClick","window","open","CardMedia","image","CardContent","gutterBottom","component","color","node","tag","document","createElement","innerHTML","innerText","ToText","slice","Blogs","useState","blogs","setBlogs","useEffect","fetch","then","res","json","data","feed","profileLink","posts","items","filter","item","categories","length","itemRows","forEach","i","push","console","log","Box","pt","Grid","container","map","index","key","xs","sm","md","lg","about","logo","About","pr","pl","role","aria-label","paragraph","Link","target","href","createMuiTheme","ThemeProvider","Container","exact","path","App","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b74196bf.chunk.js","sourcesContent":["export default {\n  dark: '#560078',\n  normal: '#b03aa7',\n  light: '#e4bbdf',\n};\n","import AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { default as React } from 'react';\nimport colors from '../../constants/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginLeft: '15px',\n    fontFamily: 'Helvetica Neue',\n  },\n  avatar: {\n    height: theme.spacing(7),\n    width: theme.spacing(7),\n    marginRight: 0,\n  },\n}));\n\nconst AppHeader = () => {\n  const classes = useStyles();\n  // const theme = useTheme();\n  // const sm = useMediaQuery(theme.breakpoints.up('sm'));\n  // const history = useHistory();\n  // const location = useLocation();\n  // const navigationOptions = [\n  //   { name: 'Blogs', key: 'blogs', onClick: () => history.push('/blogs') },\n  //   { name: 'About', key: 'about', onClick: () => history.push('/about') },\n  // ];\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position='absolute'\n        id='back-to-top-anchor'\n        style={{\n          backgroundColor: colors.normal,\n          minHeight: '100px',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Toolbar\n          disableGutters\n          style={{\n            flexGrow: 1,\n            width: '100%',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Avatar\n              alt='Saharsh Goyal'\n              src='/images/photo.jpg'\n              className={classes.avatar}\n            />\n            <Typography variant='h6' className={classes.title}>\n              Saharsh Goyal\n            </Typography>\n          </div>\n\n          {/* {navigationOptions.map(({ key, name, onClick }) => (\n            <Button\n              variant={location.pathname.includes(key) ? 'outlined' : 'text'}\n              style={{ textTransform: 'none' }}\n              color='inherit'\n              key={key}\n              onClick={onClick}\n            >\n              {name}\n            </Button>\n          ))} */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import { CardActionArea } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    padding: 60,\n  },\n}));\n\nconst ToText = (node) => {\n  let tag = document.createElement('div');\n  tag.innerHTML = node;\n  node = tag.innerText;\n  return node;\n};\n\nexport default function RecipeReviewCard({\n  thumbnail,\n  title = '',\n  content = '',\n  link,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea\n        onClick={() => {\n          window.open(link, '_blank');\n        }}\n      >\n        <CardMedia className={classes.media} image={thumbnail} title={title} />\n        <CardContent>\n          <Typography gutterBottom variant='h5' component='h2'>\n            {title}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {ToText(content).slice(0, 100) + '...'}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      {/* <CardActions>\n        <Button size='small' color='primary'>\n          Share\n        </Button>\n        <Button size='small' color='primary'>\n          Learn More\n        </Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n","import { Box, Grid } from '@material-ui/core';\nimport { default as React, useEffect, useState } from 'react';\nimport BlogCard from './BlogCard';\nconst Blogs = () => {\n  const [blogs, setBlogs] = useState([]);\n  const fetchBlogs = () => {\n    const mediumURL =\n      'https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@saharshgoyal';\n    fetch(mediumURL)\n      .then((res) => res.json())\n      .then((data) => {\n        const avatar = data.feed.image;\n        const profileLink = data.feed.link;\n        const res = data.items;\n        const posts = res.filter((item) => item.categories.length > 0);\n\n        // this.setState({ avatar: avatar, profileLink: profileLink });\n        const itemRows = [];\n        posts.forEach((item, i) => {\n          item['avatar'] = avatar; // push avatar inside the json\n          item['profilelink'] = profileLink; // push profile link inside the JSON\n          // const row = Math.floor(i / 3);\n          // if (!itemRows[row]) itemRows[row] = [];\n          itemRows.push(item);\n        });\n        setBlogs(itemRows);\n        console.log(itemRows);\n      });\n  };\n\n  useEffect(() => {\n    fetchBlogs();\n  }, []);\n  return (\n    <Box pt={5}>\n      <Grid container spacing={3}>\n        {blogs.map((item, index) => (\n          <Grid key={index} item xs={12} sm={6} md={6} lg={4}>\n            <BlogCard {...item} />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Blogs;\n","import { Box, Grid, Link, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport colors from '../../constants/colors';\nimport Blogs from '../Blogs/Blogs';\n\nconst useStyles = makeStyles({\n  about: {\n    '& a:link': {\n      color: colors.light,\n    },\n    '& a:visited': {\n      color: 'orangered',\n    },\n  },\n  logo: {\n    width: '20px',\n    height: '20px',\n  },\n});\n\nconst About = () => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={12}>\n      <Box pt={25} pr={1} pl={1} className={classes.about}>\n        <Typography variant='h3'>\n          Hi! I'm Saharsh{' '}\n          <span role='img' aria-label=\"Hi, I'm Saharsh!\">\n            👋\n          </span>\n        </Typography>\n        <Box pt={5}>\n          <Typography variant='h5' gutterBottom paragraph>\n            I'm a software engineer. I was born in 1995 and grew up in Indore,\n            India. After graduating High School, I went to SVITS where I\n            graduated with a Bachelor's degree in Computer Science Engineering.\n          </Typography>\n          <Typography variant='h5' gutterBottom paragraph>\n            I've built web and mobile apps under various domains including\n            Banking, Real-estate, E-commerce, CRM systems, Accouting/Finance,\n            etc. focused mainly on UI Development using{' '}\n            <Link target='_blank' href='https://reactjs.org/'>\n              React\n              <img\n                src='/images/react-logo.svg'\n                alt='react logo'\n                className={classes.logo}\n              />\n            </Link>\n            ,{' '}\n            <Link target='_blank' href='https://reactnative.dev/'>\n              React Native\n            </Link>{' '}\n            and{' '}\n            <Link\n              target='_blank'\n              href='https://github.com/getify/You-Dont-Know-JS'\n            >\n              Javascript\n              <img\n                src='/images/js-logo.svg'\n                alt='js logo'\n                className={classes.logo}\n              />\n            </Link>\n            .\n          </Typography>\n        </Box>\n        <Blogs />\n      </Box>\n    </Grid>\n  );\n};\nexport default About;\n","import {\n  Container,\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider,\n} from '@material-ui/core';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport About from './screens/About/About';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: 'whitesmoke',\n    height: '100%',\n  },\n}));\n\nconst theme = createMuiTheme({\n  // typography: {\n  //   fontFamily: 'Exo',\n  //   fontWeightLight: 300,\n  // },\n});\n\nexport default () => {\n  const classes = useStyles();\n  return (\n    <Router>\n      <ThemeProvider theme={theme} className={classes.root}>\n        <AppHeader />\n        <Container maxWidth='md'>\n          <Switch>\n            {/* <Route exact path='/blogs'>\n              <Blogs />\n            </Route> */}\n            <Route exact path='/'>\n              <About />\n            </Route>\n            {/* <Redirect exact from='/' to='about' /> */}\n          </Switch>\n        </Container>\n      </ThemeProvider>\n    </Router>\n  );\n};\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport { default as React } from 'react';\nimport Routes from './routes';\n\nconst App = () => {\n  return (\n    <>\n      <CssBaseline />\n\n      <Routes />\n\n      {/* <ScrollTop {...props}>\n        <Fab color='secondary' size='small' aria-label='scroll back to top'>\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop> */}\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}