{"version":3,"sources":["screens/Blogs/Blogs.js"],"names":["useStyles","makeStyles","theme","blogSharing","margin","shareButtons","display","justifyContent","marginTop","markdown","borderLeft","borderLeftColor","paddingLeft","marginLeft","border","borderRadius","background","padding","overflow","Blogs","classes","blog","useParams","blogsMapping","title","modifiedAt","slug","featureImage","url","hashtags","name","content","property","src","className","component","item","color","sm","size","round","summary","source","quote","hashtag","separator"],"mappings":"0IAAA,+JAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQ,UAEVC,aAAc,CACZC,QAAS,OACTC,eAAgB,gBAChBC,UAAW,QAEbC,SAAU,CACR,eAAgB,CACdC,WAAY,aACZC,gBAAiB,UACjBC,YAAa,OACbC,WAAY,GAEd,QAAS,CACPC,OAAQ,oBACRC,aAAc,OACdC,WAAY,YACZC,QAAS,OACTC,SAAU,eAmEDC,UA9DD,WACZ,IAAMC,EAAUpB,IACRqB,EAASC,cAATD,KACR,EACEE,IAAaF,GADPG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,KAAMC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,IAAKC,EAApD,EAAoDA,SAEpD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAQL,GACR,0BAAMM,KAAK,QAAQC,QAASP,IAC5B,0BAAMM,KAAK,cAAcC,QAASL,IAClC,0BAAMM,SAAS,UAAUD,QAAQ,YACjC,0BAAMC,SAAS,SAASD,QAASH,IACjC,0BAAMI,SAAS,WAAWD,QAASP,IACnC,0BAAMQ,SAAS,iBAAiBD,QAASL,IACzC,0BAAMM,SAAS,WAAWD,QAAO,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAcM,MACjD,0BAAMD,SAAS,iBAAiBD,QAAQ,SACxC,0BAAMC,SAAS,kBAAkBD,QAAQ,QAEzC,0BAAMC,SAAS,eAAeD,QAAQ,wBACtC,0BAAMC,SAAS,cAAcD,QAASH,IACtC,0BAAMI,SAAS,gBAAgBD,QAASP,IACxC,0BAAMQ,SAAS,sBAAsBD,QAASL,IAC9C,0BAAMM,SAAS,gBAAgBD,QAAO,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAcM,OAExD,kBAAC,IAAD,CAAKC,UAAWd,EAAQX,UAAWc,IAAaF,GAAMc,WACtD,kBAAC,IAAD,CAAKD,UAAWd,EAAQjB,aACtB,kBAAC,IAAD,CAAMiC,MAAI,GACR,kBAAC,IAAD,CAAYC,MAAM,aAAaZ,IAEjC,kBAAC,IAAD,CAAMW,MAAI,EAACE,GAAI,EAAGJ,UAAWd,EAAQf,cACnC,kBAAC,IAAD,CAAoBuB,IAAKA,EAAKJ,MAAOA,EAAOK,SAAUA,GACpD,kBAAC,IAAD,CAAaU,KAAM,GAAIC,OAAK,KAE9B,kBAAC,IAAD,CACEZ,IAAKA,EACLJ,MAAOA,EACPiB,QAASf,EACTgB,OAAQd,GAER,kBAAC,IAAD,CAAcW,KAAM,GAAIC,OAAK,KAE/B,kBAAC,IAAD,CACEZ,IAAKA,EACLe,MAAK,UAAKnB,EAAL,aAAeE,GACpBkB,QAAO,WAAMf,EAAS,KAEtB,kBAAC,IAAD,CAAcU,KAAM,GAAIC,OAAO,KAEjC,kBAAC,IAAD,CACEZ,IAAKA,EACLJ,MAAOA,EACPqB,UAAS,aAAQnB,EAAR,MAET,kBAAC,IAAD,CAAca,KAAM,GAAIC,OAAK","file":"static/js/4.8ab9a450.chunk.js","sourcesContent":["import { Box, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useParams } from 'react-router-dom';\nimport {\n  FacebookIcon,\n  FacebookShareButton,\n  LinkedinIcon,\n  LinkedinShareButton,\n  TwitterIcon,\n  TwitterShareButton,\n  WhatsappIcon,\n  WhatsappShareButton,\n} from 'react-share';\nimport { blogsMapping } from '../../constants/blogsMapping';\n\nconst useStyles = makeStyles((theme) => ({\n  blogSharing: {\n    margin: '60px 0',\n  },\n  shareButtons: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: '12px',\n  },\n  markdown: {\n    '& blockquote': {\n      borderLeft: '10px solid',\n      borderLeftColor: '#f50057',\n      paddingLeft: '25px',\n      marginLeft: 0,\n    },\n    '& pre': {\n      border: '4px solid #f50057',\n      borderRadius: '12px',\n      background: '#f5005712',\n      padding: '20px',\n      overflow: 'scroll',\n    },\n  },\n}));\n\nconst Blogs = () => {\n  const classes = useStyles();\n  const { blog } = useParams();\n  const { title, modifiedAt, slug, featureImage, url, hashtags } =\n    blogsMapping[blog];\n  return (\n    <Box>\n      <Helmet>\n        <title>{title}</title>\n        <meta name='title' content={title} />\n        <meta name='description' content={slug} />\n        <meta property='og:type' content='website' />\n        <meta property='og:url' content={url} />\n        <meta property='og:title' content={title} />\n        <meta property='og:description' content={slug} />\n        <meta property='og:image' content={featureImage?.src} />\n        <meta property='og:image:width' content='1200' />\n        <meta property='og:image:height' content='628' />\n\n        <meta property='twitter:card' content='summary_large_image' />\n        <meta property='twitter:url' content={url} />\n        <meta property='twitter:title' content={title} />\n        <meta property='twitter:description' content={slug} />\n        <meta property='twitter:image' content={featureImage?.src} />\n      </Helmet>\n      <Box className={classes.markdown}>{blogsMapping[blog].component}</Box>\n      <Box className={classes.blogSharing}>\n        <Grid item>\n          <Typography color='secondary'>{modifiedAt}</Typography>\n        </Grid>\n        <Grid item sm={4} className={classes.shareButtons}>\n          <TwitterShareButton url={url} title={title} hashtags={hashtags}>\n            <TwitterIcon size={32} round />\n          </TwitterShareButton>\n          <LinkedinShareButton\n            url={url}\n            title={title}\n            summary={slug}\n            source={url}\n          >\n            <LinkedinIcon size={32} round />\n          </LinkedinShareButton>\n          <FacebookShareButton\n            url={url}\n            quote={`${title}\\n${slug}`}\n            hashtag={`#${hashtags[0]}`}\n          >\n            <FacebookIcon size={32} round={true} />\n          </FacebookShareButton>\n          <WhatsappShareButton\n            url={url}\n            title={title}\n            separator={`:: ${slug} `}\n          >\n            <WhatsappIcon size={32} round />\n          </WhatsappShareButton>\n        </Grid>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Blogs;\n"],"sourceRoot":""}