{"version":3,"sources":["screens/Blogs/components/blogHeader.js","screens/Blogs/components/image.js","screens/Blogs/components/paragraph.js","screens/Blogs/components/quote.js","screens/Blogs/components/subTitle.js","screens/Blogs/closure.js","constants/blogsMapping.js","../node_modules/@material-ui/core/esm/Link/Link.js","screens/Blogs/Blogs.js"],"names":["BlogHeader","title","featureImage","src","credit","url","Box","mt","mb","style","display","flexDirection","alignItems","Typography","gutterBottom","variant","color","alt","width","target","rel","href","Image","Grid","item","md","Paragraph","children","paragraph","Quote","borderLeft","paddingLeft","fontStyle","SubTitle","Closure","generateList","list","map","index","ListItem","key","ListItemText","primary","preventDefault","e","List","aria-label","Link","onClick","blogsMapping","closures","createdAt","modifiedAt","slug","tags","component","React","props","ref","classes","className","_props$color","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","Blogs","blog","useParams"],"mappings":"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","file":"static/js/5.ac6afcb2.chunk.js","sourcesContent":["import { Box, Typography } from '@material-ui/core';\nimport { default as React } from 'react';\nconst BlogHeader = ({ title, featureImage: { src, credit, url } }) => {\n  return (\n    <Box\n      mt={10}\n      mb={10}\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Typography\n        gutterBottom\n        variant='h4'\n        style={{\n          color: 'darkmagenta',\n        }}\n      >\n        {title}\n      </Typography>\n\n      <Box>\n        <img src={src} alt={credit} style={{ width: '100%' }} />\n      </Box>\n\n      <Typography gutterBottom>\n        Photo by{' '}\n        <a target='_blank' rel='noopener noreferrer' href={url}>\n          {credit}\n        </a>\n      </Typography>\n    </Box>\n  );\n};\n\nexport default BlogHeader;\n","import { Box, Grid } from '@material-ui/core';\nimport { default as React } from 'react';\nconst Image = ({ src, alt }) => {\n  return (\n    <Grid item md={8}>\n      <Box mb={5}>\n        <img src={src} alt={alt} style={{ width: '100%' }} />\n      </Box>\n    </Grid>\n  );\n};\n\nexport default Image;\n","import { Typography } from '@material-ui/core';\nimport { default as React } from 'react';\nconst Paragraph = ({ children }) => {\n  return (\n    <Typography paragraph variant='body1'>\n      {children}\n    </Typography>\n  );\n};\n\nexport default Paragraph;\n","import { Box, Typography } from '@material-ui/core';\nimport { default as React } from 'react';\nconst Quote = ({ children }) => {\n  return (\n    <Box\n      style={{\n        borderLeft: '5px solid darkviolet',\n        paddingLeft: 15,\n        fontStyle: 'italic',\n      }}\n      mt={5}\n      mb={5}\n    >\n      <Typography variant='body1'>{children}</Typography>\n    </Box>\n  );\n};\n\nexport default Quote;\n","import { Typography } from '@material-ui/core';\nimport { default as React } from 'react';\nconst SubTitle = ({ children }) => {\n  return (\n    <Typography paragraph variant='body1' color='secondary'>\n      {children}\n    </Typography>\n  );\n};\n\nexport default SubTitle;\n","import {\n  Box,\n  Link,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport { default as React } from 'react';\nimport BlogHeader from './components/blogHeader';\nimport Image from './components/image';\nimport Paragraph from './components/paragraph';\nimport Quote from './components/quote';\nimport SubTitle from './components/subTitle';\n\nconst Closure = () => {\n  const problems = [\n    'newFunction is equal to outerFunction call.',\n    `When innerFunction() is executed it searches for the “name” variable\n    and finds it in outerFunction scope.`,\n  ];\n  const truth = [\n    'newFunction is equal to innerFunction definition.',\n    'innerFunction bundles the environment with its definition (lexical/static scoping) and takes this bundle wherever it is executed.',\n  ];\n\n  const generateList = (list) => {\n    return list.map((item, index) => (\n      <ListItem key={item}>\n        <ListItemText primary={`${index + 1}. ${item}`} />\n      </ListItem>\n    ));\n  };\n\n  const preventDefault = (e) => e.preventDefault();\n  return (\n    <Box>\n      <BlogHeader\n        title='Closures'\n        featureImage={{\n          src:\n            'https://images.unsplash.com/photo-1450562624248-869a3ec195f1?ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',\n          credit: 'Cody Black',\n          url:\n            'https://unsplash.com/@cblack09?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText',\n        }}\n      />\n\n      <Paragraph>\n        Definition: A <strong>closure</strong> is a combination of a function\n        bundled together (enclosed) with references to its surrounding state\n        (the lexical environment). In other words, a closure gives you access to\n        an outer function’s scope from an inner function.\n      </Paragraph>\n\n      <Quote>\n        Closure ={'>'} function + environment (place where the function is\n        defined called as scope {'{ }'})\n      </Quote>\n\n      <Image src='/images/closure.svg' alt='closure implementation' />\n\n      <Paragraph>\n        Line 2-6 comprises of the lexical environment in which innerFunction is\n        defined.\n      </Paragraph>\n\n      <Typography>What it appears -</Typography>\n      <List aria-label='What it appears'>{generateList(problems)}</List>\n\n      <Typography>Truth -</Typography>\n      <List aria-label='Truth'>{generateList(truth)}</List>\n\n      <Paragraph>\n        Closure helps to implement the object-oriented flavor of classes with\n        accessibility, by creating private and public properties of a function,\n        the variables defined inside the lexical environment of innerFunction\n        are private and can’t be accessed from outside its scope and whatever\n        the outerFunction returns is accessible by the global scope i.e\n        innerFunction is exposed as public method.\n      </Paragraph>\n\n      <Paragraph>\n        Creating closure is also feasible for situations where you want to share\n        the lexical scope of a function with multiple bindings and it is not\n        recommended to use nested closures since sharing the lexical environment\n        for any event based binding among multiple elements may lead to\n        unexpected behavior.\n      </Paragraph>\n      <Paragraph>\n        So, closure is just a bundle of the environment, scope, variables,\n        definition packed together as a <strong>BACKPACK</strong> taken by the\n        inner function.\n      </Paragraph>\n\n      <SubTitle>Beyond</SubTitle>\n      <Paragraph>\n        This is just a brief about closures in javascript, for further reading\n        or examples refer{' '}\n        <Link\n          href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures'\n          onClick={preventDefault}\n        >\n          this.\n        </Link>{' '}\n        See power of closures, refer{' '}\n        <Link href='http://csbin.io/closures' onClick={preventDefault}>\n          these examples.\n        </Link>\n      </Paragraph>\n    </Box>\n  );\n};\n\nexport default Closure;\n","import React from 'react';\nimport Closure from '../screens/Blogs/closure';\n\nexport const blogsMapping = {\n  closures: {\n    title: 'Closures in JS',\n    createdAt: '12-07-2020',\n    modifiedAt: '15-07-2020',\n    slug:\n      'Briefly understanding closure and lexical environment in javascript.',\n    tags: ['javascript', 'closures', 'scoping'],\n    component: <Closure />,\n  },\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import { useParams } from 'react-router-dom';\nimport { blogsMapping } from '../../constants/blogsMapping';\n\nconst Blogs = () => {\n  const { blog } = useParams();\n  return blogsMapping[blog].component;\n};\n\nexport default Blogs;\n"],"sourceRoot":""}