{"version":3,"sources":["Context/reducer.js","Context/context.js","constants/menuOption.js","components/AppMenu/AppMenu.js","components/AppHeader/AppHeader.js","components/ScrollTop/ScrollTop.js","constants/colors.js","screens/Contact.js","App.js","serviceWorker.js","index.js"],"names":["AppReducer","state","action","type","mode","AppContext","createContext","AppProvider","children","hours","Date","getHours","initialState","useReducer","dispatch","Provider","value","appState","menuOptions","title","link","useStyles","makeStyles","theme","closeButton","alignSelf","list","display","flexDirection","justifyContent","height","dialog","backgroundColor","backdrop","zIndex","drawer","color","actionButtons","width","alignItems","marginLeft","fontFamily","cursor","openMenu","toggleMenu","history","handleTheme","useHistory","classes","useEffect","window","onscroll","scrollTo","Backdrop","className","open","Typography","variant","IconButton","edge","onClick","aria-label","List","map","item","ListItem","button","key","push","ListItemText","primary","appBar","boxShadow","avatar","marginTop","spacing","marginRight","AppHeader","useContext","useTheme","sm","useMediaQuery","breakpoints","down","useState","setOpenMenu","AppBar","position","id","Toolbar","style","flexGrow","Switch","checked","onChange","name","inputProps","Box","location","pathname","AppMenu","root","bottom","right","ScrollTop","props","trigger","useScrollTrigger","Zoom","timeout","in","event","anchor","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","contact","links","border","paddingTop","borderTopLeftRadius","borderTopRightRadius","Contact","smallScreens","Grid","container","rel","href","data-show-count","BlogList","lazy","Blogs","createTheme","createMuiTheme","palette","main","background","default","typography","fontSize","about","body","minHeight","content","paddingBottom","footer","App","setTheme","ThemeProvider","CssBaseline","xs","md","fallback","path","Fab","size","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e10bc7d0.chunk.js","sourcesContent":["const AppReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_MODE':\n      return {\n        ...state,\n        mode: action.mode,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default AppReducer;\n","import PropTypes from 'prop-types';\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './reducer';\n\nexport const AppContext = createContext();\n\nconst AppProvider = ({ children }) => {\n  let mode = 'dark';\n  const hours = new Date().getHours();\n  if (hours < 19 && hours >= 5) {\n    mode = 'light';\n  }\n  const initialState = {\n    mode,\n  };\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  return (\n    <AppContext.Provider value={{ appState: state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nAppProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default AppProvider;\n","export const menuOptions = [\n  { title: 'Home', link: '/' },\n  { title: 'Blogs', link: '/blogs' },\n  { title: 'About', link: '/about' },\n];\n","import { Backdrop, ListItemText, Typography } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { menuOptions } from '../../constants/menuOption';\n\nconst useStyles = makeStyles((theme) => ({\n  closeButton: {\n    alignSelf: 'flex-end',\n  },\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    height: '100%',\n  },\n  dialog: {\n    backgroundColor: 'red',\n  },\n  backdrop: ({ mode }) => ({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n    backgroundColor: mode === 'light' ? 'darkviolet' : 'blueviolet',\n  }),\n  actionButtons: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  title: {\n    marginLeft: '15px',\n    fontFamily: 'Helvetica Neue',\n    cursor: 'pointer',\n  },\n}));\n\nexport default ({ openMenu, toggleMenu, mode, handleTheme }) => {\n  let history = useHistory();\n  const classes = useStyles({ mode });\n  useEffect(() => {\n    if (openMenu) {\n      window.onscroll = () => window.scrollTo(0, 0);\n    }\n    return () => (window.onscroll = () => {});\n  }, [openMenu]);\n\n  return (\n    <Backdrop className={classes.backdrop} open={openMenu}>\n      <div className={classes.actionButtons}>\n        <Typography variant='h6' className={classes.title} color='secondary'>\n          SG\n        </Typography>\n        <IconButton\n          edge='start'\n          color='inherit'\n          onClick={toggleMenu}\n          aria-label='close'\n          className={classes.closeButton}\n        >\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <List className={classes.list}>\n        {menuOptions.map((item) => (\n          <ListItem\n            button\n            key={item.title}\n            onClick={() => {\n              history.push(item.link);\n              toggleMenu();\n            }}\n          >\n            <ListItemText primary={item.title} />\n            {/* {item.title} */}\n          </ListItem>\n        ))}\n      </List>\n    </Backdrop>\n  );\n};\n","import { Box, Switch, Typography, useMediaQuery } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { default as React, useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from '../../Context/context';\nimport AppMenu from '../AppMenu/AppMenu';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    boxShadow: 'none',\n  },\n  title: {\n    marginLeft: '15px',\n    fontFamily: 'Helvetica Neue',\n    cursor: 'pointer',\n  },\n  avatar: {\n    marginTop: theme.spacing(2),\n    height: theme.spacing(10),\n    width: theme.spacing(10),\n    marginRight: 0,\n    cursor: 'pointer',\n  },\n}));\n\nconst AppHeader = () => {\n  const { appState, dispatch } = useContext(AppContext);\n  const { mode } = appState;\n  const theme = useTheme();\n  const sm = useMediaQuery(theme.breakpoints.down('sm'));\n  const history = useHistory();\n  const classes = useStyles({ mode });\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleTheme = () =>\n    dispatch({ type: 'SET_MODE', mode: mode === 'light' ? 'dark' : 'light' });\n\n  const toggleMenu = () => setOpenMenu(!openMenu);\n\n  return (\n    <>\n      <AppBar\n        position='fixed'\n        id='back-to-top-anchor'\n        className={classes.appBar}\n      >\n        <Toolbar\n          style={{\n            flexGrow: 1,\n            width: '100%',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Switch\n            checked={mode === 'dark'}\n            onChange={handleTheme}\n            name='mode'\n            inputProps={{ 'aria-label': 'change mode' }}\n          />\n\n          <Box style={{ display: 'flex' }}>\n            {/* {sm ? (\n              <IconButton\n                edge='start'\n                color='inherit'\n                aria-label='menu'\n                onClick={toggleMenu}\n              >\n                <MenuIcon />\n              </IconButton>\n            ) : (\n              menuOptions.map(({ title, link }) => {\n                if (title !== menuOptions[0].title) {\n                  return (\n                    <Button key={title} onClick={() => history.push(link)}>\n                      {title}\n                    </Button>\n                  );\n                }\n\n                return null;\n              })\n            )} */}\n            {!sm && (\n              <Typography\n                variant='h6'\n                onClick={() =>\n                  history.location.pathname !== '/' && history.push('/')\n                }\n                className={classes.title}\n                color='secondary'\n              >\n                Saharsh Goyal\n              </Typography>\n            )}\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <AppMenu\n        toggleMenu={toggleMenu}\n        openMenu={openMenu}\n        mode={mode}\n        handleTheme={handleTheme}\n      />\n    </>\n  );\n};\n\nexport default AppHeader;\n","import { makeStyles } from '@material-ui/core/styles';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Zoom from '@material-ui/core/Zoom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function ScrollTop(props) {\n  const { children } = props;\n  const classes = useStyles();\n  const trigger = useScrollTrigger({});\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      '#back-to-top-anchor'\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom timeout={1000} in={trigger}>\n      <div onClick={handleClick} role='presentation' className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n","export default {\n  dark: '#560078',\n  normal: '#b03aa7',\n  light: '#e4bbdf',\n};\n","import { Box, Grid, makeStyles, useMediaQuery } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport MailIcon from '@material-ui/icons/Mail';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport { default as React } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  contact: {\n    justifyContent: 'center',\n    display: 'flex',\n    color: theme.type === 'light' ? 'darkmagenta' : 'darkviolet',\n  },\n  links: {\n    border: '1px solid darkmagenta',\n    display: 'flex',\n    paddingTop: theme.spacing(1),\n    justifyContent: 'space-evenly',\n    borderTopLeftRadius: '100px',\n    borderTopRightRadius: '100px',\n    backgroundColor: '#191970',\n  },\n}));\nconst Contact = () => {\n  const classes = useStyles();\n  const smallScreens = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  return (\n    <Box>\n      {smallScreens && (\n        <Grid container className={classes.links}>\n          <Grid item>\n            <a\n              rel='noopener noreferrer'\n              target='_blank'\n              href='https://twitter.com/saharshg10?ref_src=twsrc%5Etfw'\n              data-show-count='false'\n            >\n              <TwitterIcon color='secondary' />\n            </a>\n          </Grid>\n          <Grid item>\n            <a\n              href='https://github.com/saharshg'\n              rel='noopener noreferrer'\n              target='_blank'\n            >\n              <GitHubIcon color='secondary' />\n            </a>\n          </Grid>\n\n          <Grid item>\n            <a\n              href='https://www.linkedin.com/in/saharsh-goyal-22b1b4113/'\n              rel='noopener noreferrer'\n              target='_blank'\n            >\n              <LinkedInIcon color='secondary' />\n            </a>\n          </Grid>\n          <Grid item>\n            <a\n              href='mailto:contact@saharshgoyal.com'\n              rel='noopener noreferrer'\n              target='_blank'\n            >\n              <MailIcon color='secondary' />\n            </a>\n          </Grid>\n        </Grid>\n      )}\n    </Box>\n  );\n};\n\nexport default Contact;\n","import {\n  Box,\n  createMuiTheme,\n  Fab,\n  Grid,\n  makeStyles,\n  ThemeProvider,\n} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport {\n  default as React,\n  lazy,\n  Suspense,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport ScrollTop from './components/ScrollTop/ScrollTop';\nimport colors from './constants/colors';\nimport { AppContext } from './Context/context';\nimport Contact from './screens/Contact';\n// const Home = lazy(() => import('./screens/Home/Home'));\nconst BlogList = lazy(() => import('./screens/Blogs/BlogList'));\nconst Blogs = lazy(() => import('./screens/Blogs/Blogs'));\n// const About = lazy(() => import('./screens/About'));\n\nconst createTheme = (type) => {\n  let color = '#000';\n  if (type === 'light') {\n    color = '#f0f8ff';\n  }\n  return createMuiTheme({\n    palette: {\n      primary: {\n        main: color,\n      },\n      background: {\n        default: color,\n      },\n      type,\n    },\n    typography: {\n      fontSize: 16,\n    },\n  });\n};\n\nconst useStyles = makeStyles({\n  about: {\n    '& a:link': {\n      color: colors.light,\n    },\n    '& a:visited': {\n      color: 'orangered',\n    },\n  },\n  body: {\n    position: 'relative',\n    minHeight: '100vh',\n  },\n  content: {\n    justifyContent: 'center',\n    paddingBottom: '2rem',\n  },\n  footer: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n  },\n});\n\nconst App = () => {\n  const classes = useStyles();\n  const { appState } = useContext(AppContext);\n  const { mode } = appState;\n\n  const [theme, setTheme] = useState(createTheme('light'));\n\n  useEffect(() => {\n    if (mode === 'light') {\n      setTheme(createTheme('light'));\n    } else {\n      setTheme(createTheme('dark'));\n    }\n  }, [mode]);\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Box className={classes.body}>\n          <AppHeader />\n\n          <Grid container className={classes.content}>\n            <Grid item xs={10} sm={8} md={6}>\n              <Box className={classes.about}>\n                <Suspense fallback={<div>Loading...</div>}>\n                  <Switch>\n                    {/* <Route path='/about'>\n                      <About />\n                    </Route> */}\n                    <Route path='/:blog'>\n                      <Blogs />\n                    </Route>\n                    <Route path='/'>\n                      <BlogList />\n                    </Route>\n                    {/* <Route path='/'>\n                      <Home />\n                    </Route> */}\n                  </Switch>\n                </Suspense>\n              </Box>\n            </Grid>\n          </Grid>\n\n          <Box className={classes.footer}>\n            <Contact />\n          </Box>\n        </Box>\n        <ScrollTop>\n          <Fab color='secondary' size='small' aria-label='scroll back to top'>\n            <KeyboardArrowUpIcon />\n          </Fab>\n        </ScrollTop>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'slick-carousel/slick/slick-theme.css';\nimport 'slick-carousel/slick/slick.css';\nimport App from './App';\nimport AppProvider from './Context/context';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}