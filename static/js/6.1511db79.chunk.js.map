{"version":3,"sources":["screens/Blogs/your-portfolio.js"],"names":["Closure","preventDefault","e","blogsMapping","yourPortfolio","title","featureImage","src","alt","href","onClick"],"mappings":"0IAAA,mGAyEeA,UAhEC,WACd,IAAMC,EAAiB,SAACC,GAAD,OAAOA,EAAED,kBAChC,EAAgCE,IAAaC,cAArCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aACf,OACE,kBAAC,IAAD,KACE,kBAAC,UAAD,CAAYD,MAAOA,EAAOC,aAAcA,IAExC,kBAAC,UAAD,gFAIA,kBAAC,UAAD,iBACY,IADZ,gFAE2B,MAF3B,KAKA,kBAAC,UAAD,CAAOC,IAAI,sBAAsBC,IAAI,2BAErC,kBAAC,UAAD,yFAKA,kBAAC,UAAD,kZASA,kBAAC,UAAD,oTAOA,kBAAC,UAAD,2GAEkC,4CAFlC,iCAMA,kBAAC,UAAD,eACA,kBAAC,UAAD,gGAEoB,IAClB,kBAAC,IAAD,CACEC,KAAK,mEACLC,QAAST,GAFX,SAKQ,IARV,+BAS+B,IAC7B,kBAAC,IAAD,CAAMQ,KAAK,2BAA2BC,QAAST,GAA/C","file":"static/js/6.1511db79.chunk.js","sourcesContent":["import { Box, Link } from '@material-ui/core';\nimport { default as React } from 'react';\nimport { blogsMapping } from '../../constants/blogsMapping';\nimport BlogHeader from './components/blogHeader';\nimport Image from './components/image';\nimport Paragraph from './components/paragraph';\nimport Quote from './components/quote';\nimport SubTitle from './components/subTitle';\n\nconst Closure = () => {\n  const preventDefault = (e) => e.preventDefault();\n  const { title, featureImage } = blogsMapping.yourPortfolio;\n  return (\n    <Box>\n      <BlogHeader title={title} featureImage={featureImage} />\n\n      <Paragraph>\n        If you are creating your portfolio, blogging or any other website which\n      </Paragraph>\n\n      <Quote>\n        Closure ={'>'} function + environment (place where the function is\n        defined called as scope {'{ }'})\n      </Quote>\n\n      <Image src='/images/closure.svg' alt='closure implementation' />\n\n      <Paragraph>\n        Line 2-6 comprises of the lexical environment in which innerFunction is\n        defined.\n      </Paragraph>\n\n      <Paragraph>\n        Closure helps to implement the object-oriented flavor of classes with\n        accessibility, by creating private and public properties of a function,\n        the variables defined inside the lexical environment of innerFunction\n        are private and canâ€™t be accessed from outside its scope and whatever\n        the outerFunction returns is accessible by the global scope i.e\n        innerFunction is exposed as public method.\n      </Paragraph>\n\n      <Paragraph>\n        Creating closure is also feasible for situations where you want to share\n        the lexical scope of a function with multiple bindings and it is not\n        recommended to use nested closures since sharing the lexical environment\n        for any event based binding among multiple elements may lead to\n        unexpected behavior.\n      </Paragraph>\n      <Paragraph>\n        So, closure is just a bundle of the environment, scope, variables,\n        definition packed together as a <strong>BACKPACK</strong> taken by the\n        inner function.\n      </Paragraph>\n\n      <SubTitle>Beyond</SubTitle>\n      <Paragraph>\n        This is just a brief about closures in javascript, for further reading\n        or examples refer{' '}\n        <Link\n          href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures'\n          onClick={preventDefault}\n        >\n          this.\n        </Link>{' '}\n        See power of closures, refer{' '}\n        <Link href='http://csbin.io/closures' onClick={preventDefault}>\n          these examples.\n        </Link>\n      </Paragraph>\n    </Box>\n  );\n};\n\nexport default Closure;\n"],"sourceRoot":""}